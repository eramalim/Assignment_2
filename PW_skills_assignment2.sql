use mavenmovies;
use sakila;
show tables;
-- Question 1:
-- Retrieve the total number of rentals made in the Sakila database.
select count(rental_id) as rental from rental;

-- Question 2:
-- Find the average rental duration (in days) of movies rented from the Sakila database.
select avg(rental_duration) as reantal_duration from film; 

-- Question 3:
-- Display the first name and last name of customers in uppercase.
select upper(first_name) as first_name , upper(last_name) as last_name from customer; 

-- Question 4:
-- Extract the month from the rental date and display it alongside the rental ID.
select rental_id, month(rental_date) from rental;

-- Question 5:
-- Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
select customer_id, count(rental_id) as count_of_rentals from rental group by customer_id; 

-- Question 6:
-- Find the total revenue generated by each store.
select payment_id, sum(amount) as total_revenue from payment group by payment_id; 

-- Question 7:
-- Display the title of the movie, customers first name, and last name who rented it.
SELECT 
    film.title, customer.first_name, customer.last_name
FROM
    customer
        INNER JOIN
    rental ON customer.customer_id = rental.customer_id
        INNER JOIN
    inventory ON rental.inventory_id = inventory.inventory_id
        INNER JOIN
    film ON inventory.film_id = film.film_id;
    
-- Question 8 
-- Retrieve the names of all actors who have appeared in the film "Gone with the Wind."    
SELECT 
    film.title, actor.first_name, actor.last_name
FROM
    actor
        INNER JOIN
    film_actor ON film_actor.actor_id = actor.actor_id
        INNER JOIN
    film ON film_actor.film_id = film.film_id
WHERE
    title = 'Gone with the wind'; 
    
-- Group by 
-- Question 1: Determine the total number of rentals for each category of movies.

SELECT 
    film_category.category_id, COUNT(rental_id) AS rentals
FROM
    rental
        JOIN
    inventory ON rental.inventory_id = inventory.inventory_id
        JOIN
    film ON inventory.film_id = film.film_id
        JOIN
    film_category ON film.film_id = film_category.film_id
GROUP BY (category_id);

-- Question 2 
-- Find the average rental rate of movies in each language.

SELECT 
    language.language_id, AVG(rental_rate)
FROM
    film
        JOIN
    language ON film.language_id = language.language_id
GROUP BY language_id;

-- Question 3 
-- Retrieve the customer names along with the total amount they've spent on rentals.

SELECT 
    CONCAT(customer.first_name,
            ' ',
            customer.last_name) AS customer_name,
    SUM(amount) AS amount
FROM
    payment
        JOIN
    rental ON payment.rental_id = rental.rental_id
        JOIN
    customer ON rental.customer_id = customer.customer_id
GROUP BY customer_name;

-- Question 4 
-- List the titles of movies rented by each customer in a particular city (e.g., 'London').
SELECT 
    customer.first_name,
    customer.last_name,
    film.title,
    city.city
FROM
    film
        JOIN
    inventory ON film.film_id = inventory.film_id
        JOIN
    rental ON inventory.inventory_id = rental.inventory_id
        JOIN
    customer ON rental.customer_id = customer.customer_id
        JOIN
    address ON customer.address_id = address.address_id
        JOIN
    city ON address.city_id = city.city_id
WHERE
    city = 'london';

-- Question 5 
-- Display the top 5 rented movies along with the number of times they've been rented.
SELECT 
    film.title, COUNT(rental_id) AS rental_id_count
FROM
    rental
        JOIN
    inventory ON rental.inventory_id = inventory.inventory_id
        JOIN
    film ON inventory.film_id = film.film_id
GROUP BY film.title
ORDER BY rental_id_count DESC
LIMIT 5;

-- Question 6 
-- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
SELECT
    store.store_id,
    CONCAT(customer.first_name, ' ', customer.last_name) AS customer_name
FROM
    customer
JOIN
    rental ON rental.customer_id = customer.customer_id
JOIN
    staff ON rental.staff_id = staff.staff_id
JOIN
    store ON staff.store_id = store.store_id
WHERE
    store.store_id IN (1, 2)
GROUP BY
    store.store_id, customer_name;

